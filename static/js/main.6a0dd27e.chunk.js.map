{"version":3,"sources":["Component/Example.js","Component/BaseInput.js","Component/BaseButton.js","Component/Base.js","Component/FontSizeController.js","Component/Title.js","Component/Latex.js","Component/Equal.js","App.js","reportWebVitals.js","index.js"],"names":["Example","textarea","text","className","split","map","idx","tex","BaseInput","fontSize","size","setSize","depth","setClick","activeArr","baseInput","onMouseEnter","setText","autoFocus","style","width","margin","onChange","e","target","value","length","reduce","sum","char","test","onBlur","placeholder","ref","BaseButton","setActiveArr","focusInput","pos","buttonStyle","useState","click","useEffect","tmpArr","slice","arr","checkEmpty","display","opacity","onClick","Base","upSubscript","setUpSubscript","downSubscript","setDownSubscript","input","setInput","left","right","setButtonStyle","useRef","setButtonDisplay","newButtonStyle","newText","buttonProps","current","focus","inputProps","onMouseLeave","FontSizeController","setFontSize","type","min","max","step","Title","Latex","Equal","leftText","setLeftText","rightText","setRightText","baseProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a0dd27e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MathComponent } from \"mathjax-react\";\r\n\r\nconst Example = ({ text }) => {\r\n  const makeComponentArray = (textarea) => {\r\n    return textarea\r\n      .split(\"\\n\")\r\n      .map((text, idx) => <MathComponent tex={text} key={idx}></MathComponent>);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>{makeComponentArray(text)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React from \"react\";\r\n\r\nconst BaseInput = ({\r\n  fontSize,\r\n  size,\r\n  setSize,\r\n  depth,\r\n  setClick,\r\n  activeArr,\r\n  baseInput,\r\n  onMouseEnter,\r\n  setText,\r\n}) => {\r\n  const checkEmpty = (arr) => {\r\n    return arr.reduce((sum, e) => sum + e) ? false : true;\r\n  };\r\n\r\n  const getSize = (input) =>\r\n    input.split(\"\").reduce((sum, char) => {\r\n      const korean =\r\n        /[a-zA-Z!?@#$%^&*():;+-=~{}<>\\_\\[\\]\\|\\\\\\\"\\'\\,\\.\\/\\`\\?0-9]/g;\r\n      const result = korean.test(char);\r\n      if (!result) return sum + 1.666;\r\n      else return sum + 1;\r\n    }, 0);\r\n\r\n  return (\r\n    <input\r\n      className=\"base-input\"\r\n      autoFocus\r\n      style={{\r\n        width: `${size}ch`,\r\n        fontSize: `${fontSize}pt`,\r\n        margin: `${fontSize / 20}px ${fontSize / 20}px`,\r\n      }}\r\n      onChange={(e) => {\r\n        setSize(\r\n          e.target && e.target.value.length >= 1 ? getSize(e.target.value) : 1\r\n        );\r\n        setText(e.target.value);\r\n      }}\r\n      onBlur={(e) => {\r\n        if (\r\n          e.target.value.length == 0 &&\r\n          depth > 0 &&\r\n          (depth == 2 || checkEmpty(activeArr))\r\n        ) {\r\n          setClick(false);\r\n        }\r\n      }}\r\n      onMouseEnter={onMouseEnter}\r\n      placeholder={\" \"}\r\n      ref={baseInput}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BaseInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\n\r\nconst BaseButton = ({\r\n  fontSize,\r\n  depth,\r\n  setText,\r\n  activeArr,\r\n  setActiveArr,\r\n  focusInput,\r\n  pos,\r\n  buttonStyle,\r\n}) => {\r\n  const [click, setClick] = useState(false);\r\n  const checkEmpty = (arr, pos) => {\r\n    return !arr.reduce((sum, e, idx) => {\r\n      if (idx == pos) return sum;\r\n      else return sum || e;\r\n    }, false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let tmpArr = activeArr ? activeArr.slice() : [0, 0, 0, 0];\r\n\r\n    if (click) {\r\n      tmpArr[pos] = 1;\r\n      setActiveArr(tmpArr);\r\n    } else {\r\n      if (checkEmpty(activeArr, pos)) focusInput();\r\n      tmpArr[pos] = 0;\r\n      setActiveArr(tmpArr);\r\n    }\r\n  }, [click]);\r\n  return (\r\n    <>\r\n      {!click ? (\r\n        <button\r\n          style={{\r\n            fontSize: `${fontSize / 2.1}pt`,\r\n            display: buttonStyle.display,\r\n            opacity: buttonStyle.opacity,\r\n            margin: `${fontSize / 30}px 0px`,\r\n          }}\r\n          className=\"add-button\"\r\n          onClick={(e) => {\r\n            setClick(!click);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      ) : (\r\n        <Base\r\n          fontSize={fontSize / 2}\r\n          depth={depth + 1}\r\n          setText={setText}\r\n          setClick={setClick}\r\n        ></Base>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseButton;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport BaseInput from \"./BaseInput\";\r\nimport BaseButton from \"./BaseButton\";\r\n\r\nconst Base = ({ fontSize, depth, setText, setClick }) => {\r\n  const [size, setSize] = useState(1);\r\n  const [upSubscript, setUpSubscript] = useState(\"\");\r\n  const [downSubscript, setDownSubscript] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [activeArr, setActiveArr] = useState([0, 0]);\r\n  const [buttonStyle, setButtonStyle] = useState({\r\n    left: { display: \"\", opacity: \"0%\" },\r\n    right: { display: \"\", opacity: \"0%\" },\r\n  });\r\n  const baseInput = useRef();\r\n\r\n  const focusInput = () => {\r\n    baseInput.current.focus();\r\n  };\r\n\r\n  const onMouseEnter = () => {\r\n    setButtonStyle({ display: \"\", opacity: \"\" });\r\n  };\r\n\r\n  const setButtonDisplay = () => {\r\n    let newButtonStyle = {\r\n      display: \"\",\r\n      opacity: \"0%\",\r\n    };\r\n    newButtonStyle.display = activeArr[0] || activeArr[1] ? \"\" : \"none\";\r\n    setButtonStyle(newButtonStyle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonDisplay();\r\n  }, [activeArr]);\r\n\r\n  useEffect(() => {\r\n    let newText = \"\";\r\n    if (input) newText += input;\r\n    if (downSubscript) newText += \"_{\" + downSubscript + \"}\";\r\n    if (upSubscript) newText += \"^{\" + upSubscript + \"}\";\r\n    setText(newText);\r\n  }, [input, downSubscript, upSubscript]);\r\n\r\n  const buttonProps = {\r\n    fontSize,\r\n    depth,\r\n    focusInput,\r\n    activeArr,\r\n    setActiveArr,\r\n  };\r\n\r\n  const inputProps = {\r\n    fontSize,\r\n    size,\r\n    depth,\r\n    setSize,\r\n    buttonProps,\r\n    setClick,\r\n    activeArr,\r\n    baseInput,\r\n    onMouseEnter,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {depth < 2 ? (\r\n        <div className=\"base-container\" onMouseLeave={() => setButtonDisplay()}>\r\n          <BaseInput {...inputProps} setText={setInput} />\r\n          <div className=\"button-wrapper\">\r\n            <BaseButton\r\n              {...buttonProps}\r\n              pos={0}\r\n              buttonStyle={buttonStyle}\r\n              setText={setUpSubscript}\r\n            />\r\n            <BaseButton\r\n              {...buttonProps}\r\n              pos={1}\r\n              buttonStyle={buttonStyle}\r\n              setText={setDownSubscript}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"base-container\">\r\n          <BaseInput {...inputProps} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import React from \"react\";\r\n\r\nconst FontSizeController = ({ setFontSize }) => {\r\n  return (\r\n    <div className=\"font-size\">\r\n      <label className=\"font-size-label\">Font Size</label>\r\n      <input\r\n        type=\"range\"\r\n        className=\"font-size-controller\"\r\n        min={32}\r\n        max={80}\r\n        step={4}\r\n        onChange={(e) => {\r\n          setFontSize(e.target.value);\r\n        }}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontSizeController;\r\n","import React from \"react\";\r\nimport FontSizeController from \"./FontSizeController\";\r\n\r\nconst Title = ({ setFontSize }) => {\r\n  return (\r\n    <div className=\"title\">\r\n      <div className=\"name\">Math Equation Editor</div>\r\n      <FontSizeController setFontSize={setFontSize} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\n\r\nconst Latex = ({ text, fontSize }) => {\r\n  return <div className=\"latex\">{text}</div>;\r\n};\r\n\r\nexport default Latex;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\n\r\nconst Equal = ({ setText, fontSize, depth }) => {\r\n  const [leftText, setLeftText] = useState(\"\");\r\n  const [rightText, setRightText] = useState(\"\");\r\n  const baseProps = { fontSize, depth };\r\n\r\n  useEffect(() => {\r\n    setText(leftText + \"=\" + rightText);\r\n  }, [leftText, rightText]);\r\n  return (\r\n    <div className=\"equal-wrapper\">\r\n      <Base {...baseProps} setText={setLeftText}></Base>\r\n      <div\r\n        className=\"equal\"\r\n        style={{\r\n          fontSize: `${fontSize}pt`,\r\n          margin: `0px ${fontSize / 10}px`,\r\n        }}\r\n      >\r\n        =\r\n      </div>\r\n      <Base {...baseProps} setText={setRightText}></Base>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Equal;\r\n","import \"./App.css\";\nimport Example from \"./Component/Example\";\nimport Base from \"./Component/Base\";\nimport Title from \"./Component/Title\";\nimport Latex from \"./Component/Latex\";\nimport React, { useState } from \"react\";\nimport Equal from \"./Component/Equal\";\n\nfunction App() {\n  const [text, setText] = useState(\"=\");\n  const [fontSize, setFontSize] = useState(52);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Title setFontSize={setFontSize} />\n        <div className=\"editor-container\">\n          <Equal\n            text={text}\n            setText={setText}\n            fontSize={fontSize}\n            depth={0}\n          ></Equal>\n        </div>\n        <div className=\"result-container\">\n          <Example text={text} fontSize={fontSize}></Example>\n        </div>\n        <div className=\"latex-container\">\n          <Latex text={text} fontSize={fontSize}></Latex>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}